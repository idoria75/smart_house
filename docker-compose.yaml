version: '3.8'

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/:/app/
    networks:
      - server-network
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://backend:3000
    command: sleep infinity

  backend:
    container_name: backend
    build:
      context: ./backend
    ports:
      - "3001:3001"
    volumes:
      - ./backend/:/app/
    networks:
      - server-network
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=3001
    command: sleep infinity

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:latest
    ports:
      - "1883:1883"     # MQTT port
      - "9001:9001"     # WebSocket port (optional)
    volumes:
      - ./mosquitto/config:/mosquitto/config   # Config files for Mosquitto
    networks:
      - server-network

  mysql:
    container_name: mysql
    image: mysql:8.4.3
    restart: always
    # ports:
    #   - 3306:3306
    volumes:
      - ./mysql/init-scripts:/docker-entrypoint-initdb.d
      - ./mysql/db:/var/lib/mysql
    networks:
      - server-network
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: webapp
      MYSQL_USER: webapp

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 9090:8080
    networks:
      - server-network
    environment:
      ADMINER_DEFAULT_SERVER: mysql

networks:
  server-network:
    driver: bridge
